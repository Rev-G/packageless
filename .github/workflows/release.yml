# GitHub Actions CI/CD to create a release for packageless
name: release

# Create a release when a new tag is pushed
on:
  push:
    tags:
      - 'v*.*.*'

  workflow_dispatch:
    inputs:
      version:
        description: 'The version for this release'
        required: true

# Set up the actual workflow jobs
jobs:
  # Build the executable on linux and mac and upload it as an artifact to use in the release
  build-unix-executables:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    # Checkout the repo to build the file
    steps:
      - name: lowercase Runner OS
        run: echo "RUNNER_OS_LOWER=$(echo ${RUNNER_OS} | awk '{ print tolower($1) }')" >> ${GITHUB_ENV} 
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.4
      - name: Build ${{ runner.os }} packageless with tag as version
        run: go build -ldflags "-X github.com/everettraven/packageless/subcommands.version=${{ github.ref_name }}" -o packageless-${{ env.RUNNER_OS_LOWER }}
      - name: Upload build artifacts for ${{ runner.os }}
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ env.RUNNER_OS_LOWER }}-${{ github.ref_name }}
          path: packageless-${{ env.RUNNER_OS_LOWER }}
  # Build the executable on Windows, upload as artifact
  build-windows-executable:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.4
      - name: Build ${{ runner.os }} packageless with tag as version
        run: go build -ldflags "-X github.com/everettraven/packageless/subcommands.version=${{ github.ref_name }}" -o packageless-windows
      - name: Upload build artifacts for ${{ runner.os }}
        uses: actions/upload-artifact@v2
        with:
          name: build-windows-${{ github.ref_name }}
          path: packageless-windows

  # Create the release and upload the executable files
  release:
    needs: [build-unix-executables, build-windows-executable]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Download Windows build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-windows-${{ github.ref_name }}
      - name: Download Linux build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-linux-${{ github.ref_name }}
      - name: Download MacOS build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-macos-${{ github.ref_name }}
      - name: Create release and upload files
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            packageless-windows
            packageless-linux
            packageless-macos
            config.hcl
          generate_release_notes: true
      
