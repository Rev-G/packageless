"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=s(n),d=o,g=f["".concat(c,".").concat(d)]||f[d]||p[d]||a;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9733:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return f}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={id:"configuration",title:"Configuring packageless"},c=void 0,s={unversionedId:"configuration",id:"configuration",isDocsHomePage:!1,title:"Configuring packageless",description:"packageless has a configuration file that allows for easy configuration modifications.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/packageless/configuration",editUrl:"https://github.com/everettraven/packageless/edit/main/docs/docs/configuration.md",tags:[],version:"current",frontMatter:{id:"configuration",title:"Configuring packageless"},sidebar:"sidebar",previous:{title:"Contributing",permalink:"/packageless/contrib"}},u=[{value:"Configuration Values",id:"configuration-values",children:[]}],p={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"packageless")," has a configuration file that allows for easy configuration modifications."),(0,a.kt)("p",null,"The configuration file can be found in a user's home directory under the ",(0,a.kt)("inlineCode",{parentName:"p"},".packageless")," folder\nand is called ",(0,a.kt)("inlineCode",{parentName:"p"},"config.hcl"),"."),(0,a.kt)("p",null,"An example to the configuration file pathing: ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.packageless/config.hcl")),(0,a.kt)("h2",{id:"configuration-values"},"Configuration Values"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"base_dir")," - The base directory that packageless should download pim configuration files, and create volumes to."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"start_port")," - The port to start with when running containers that need a port exposed. This functionality is currently not enabled and this value is not used."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"port_increment")," - The value to increment the start port if the port is already taken. This functionality is currently not enabled and this value is not used."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"alias")," - Boolean value to indicated whether or not you would like ",(0,a.kt)("strong",{parentName:"p"},"packageless")," to automatically set aliases for you when installing a pim."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"repository_host")," - The repository that ",(0,a.kt)("strong",{parentName:"p"},"packageless")," will search and pull pim configurations from. This pathing should allow for retrieving the raw file contents."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"pims_config_dir")," - The directory that pim configuration files should be stored in."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"pims_dir")," - The directory that volumes and date for pims to run should be created in."))}f.isMDXComponent=!0}}]);